import { NavLink, Link } from "react-router-dom";
import React, { useEffect, useState } from "react";
import { IoNotifications } from "react-icons/io5";
import NavRoutes from "../widget/routes";
import { motion } from "framer-motion";
import Cookies from "js-cookie";
import axios from "axios";
import { getUserRoute } from "../../routes";

const Nav: React.FC = () => {
  const userId = Cookies.get("user-id");
  const [userName, setUserName] = useState("");

  useEffect(() => {
    if (userId) {
      axios
        .get(getUserRoute(userId))
        .then(({ data }) => setUserName(data.user.username));
    }
  }, [userName]);

  return (
    <div>
      <motion.nav
        initial={{ y: -50 }}
        animate={{ y: 0 }}
        transition={{ delay: 0.2, type: "spring", stiffness: 200 }}
      >
        <div id="logo">
          <Link to="/">
            <svg
              className="logo"
              width="12"
              height="15"
              viewBox="0 0 12 15"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <motion.path
                initial={{ pathLength: 0, fillOpacity: "0" }}
                animate={{
                  pathLength: 1,
                  fillOpacity: 1,
                  transition: {
                    pathLength: { delay: 0.5, duration: 0.5, ease: "easeOut" },
                    fillOpacity: {
                      delay: 2,
                      ease: "easeInOut",
                    },
                  },
                }}
                fill="cyan"
                stroke={"cyan"}
                d="M11.4318 0.96V3.7H7.7118V15H4.2918V3.7H0.571797V0.96H11.4318Z"
              />
            </svg>

            <svg
              width="36"
              height="17"
              viewBox="0 0 36 17"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <motion.path
                initial={{ pathLength: 0, fillOpacity: "0" }}
                animate={{
                  pathLength: 1,
                  fillOpacity: 1,
                  transition: {
                    pathLength: { delay: 1, duration: 1, ease: "easeInOut" },
                    fillOpacity: {
                      delay: 2.5,
                      ease: "easeInOut",
                    },
                  },
                }}
                fill="white"
                stroke={"white"}
                d="M0.377048 10.9996C0.364209 9.38636 0.774063 8.10972 1.60661 7.16973C2.43905 6.21641 3.63524 5.73354 5.19519 5.72113C6.03517 5.71445 6.75626 5.84871 7.35847 6.12393C7.9739 6.38571 8.48347 6.74833 8.88717 7.2118C9.29087 7.67527 9.5886 8.22625 9.78036 8.86474C9.98544 9.50313 10.0909 10.189 10.0967 10.9223C10.1031 11.7223 10.0022 12.4498 9.7941 13.1048C9.58587 13.7464 9.27689 14.2956 8.86718 14.7522C8.45747 15.2088 7.94696 15.5662 7.33566 15.8244C6.73759 16.0692 6.0519 16.1946 5.27859 16.2008C4.45195 16.2074 3.73092 16.0798 3.11548 15.818C2.49994 15.5429 1.99032 15.1736 1.58661 14.7101C1.18291 14.2467 0.878519 13.6957 0.673433 13.0573C0.481679 12.4189 0.382884 11.733 0.377048 10.9996ZM2.037 10.9864C2.04071 11.4531 2.09775 11.9193 2.20813 12.3851C2.33184 12.8508 2.52184 13.2693 2.77814 13.6406C3.03444 14.0119 3.36348 14.3093 3.76527 14.5328C4.1804 14.7562 4.68128 14.8655 5.26793 14.8608C6.33456 14.8524 7.13194 14.5193 7.66006 13.8618C8.2014 13.1908 8.46698 12.2153 8.45679 10.9353C8.45297 10.4554 8.38926 9.98918 8.26566 9.53682C8.15528 9.07101 7.96528 8.65251 7.69565 8.28131C7.43935 7.91001 7.10364 7.61267 6.68852 7.3893C6.28673 7.16582 5.79251 7.05642 5.20586 7.06109C4.13923 7.06958 3.34185 7.4026 2.81373 8.06016C2.28562 8.71771 2.0267 9.69314 2.037 10.9864ZM12.0847 10.3865C12.0758 9.26649 12.2947 8.28471 12.7413 7.44113C13.1878 6.58422 13.8026 5.91931 14.5855 5.44639C15.3818 4.97338 16.2732 4.73294 17.2598 4.72509C18.1131 4.7183 18.908 4.91198 19.6445 5.30613C20.3809 5.68695 20.945 6.19581 21.3367 6.83271L21.2906 1.03289L23.1305 1.01825L23.2483 15.8178L21.4084 15.8324L21.392 13.7725C21.0372 14.4287 20.5082 14.9729 19.8049 15.4052C19.1016 15.8241 18.2766 16.0374 17.3299 16.0449C16.3566 16.0526 15.4681 15.8197 14.6643 15.3461C13.8738 14.8724 13.2485 14.204 12.7883 13.3409C12.328 12.4779 12.0935 11.4931 12.0847 10.3865ZM21.3646 10.3326C21.358 9.50596 21.1856 8.78731 20.8474 8.17665C20.5092 7.56599 20.0522 7.10294 19.4763 6.78752C18.9137 6.45865 18.2924 6.29692 17.6124 6.30233C16.9324 6.30774 16.3137 6.47267 15.7563 6.79712C15.1988 7.12157 14.7559 7.59177 14.4275 8.20774C14.099 8.82371 13.9381 9.54501 13.9447 10.3716C13.9514 11.2116 14.1238 11.9436 14.4622 12.5676C14.8004 13.1783 15.2508 13.648 15.8134 13.9769C16.3759 14.2924 16.9972 14.4475 17.6772 14.4421C18.3572 14.4367 18.9759 14.2717 19.5333 13.9473C20.104 13.6094 20.5535 13.1325 20.882 12.5165C21.2103 11.8872 21.3712 11.1592 21.3646 10.3326ZM25.8841 10.7966C25.8712 9.18337 26.2811 7.90673 27.1136 6.96674C27.9461 6.01342 29.1422 5.53055 30.7022 5.51814C31.5422 5.51145 32.2633 5.64572 32.8655 5.92094C33.4809 6.18271 33.9905 6.54534 34.3942 7.00881C34.7979 7.47227 35.0956 8.02326 35.2874 8.66175C35.4924 9.30014 35.5979 9.98599 35.6037 10.7193C35.6101 11.5193 35.5092 12.2468 35.3011 12.9018C35.0929 13.5435 34.7839 14.0926 34.3742 14.5492C33.9645 15.0058 33.454 15.3632 32.8427 15.6214C32.2446 15.8662 31.5589 15.9917 30.7856 15.9978C29.959 16.0044 29.2379 15.8768 28.6225 15.615C28.0069 15.3399 27.4973 14.9706 27.0936 14.5071C26.6899 14.0437 26.3855 13.4927 26.1804 12.8544C25.9887 12.2159 25.8899 11.53 25.8841 10.7966ZM27.544 10.7834C27.5477 11.2501 27.6048 11.7163 27.7151 12.1821C27.8388 12.6478 28.0288 13.0663 28.2851 13.4376C28.5414 13.8089 28.8705 14.1063 29.2723 14.3298C29.6874 14.5532 30.1883 14.6625 30.7749 14.6579C31.8416 14.6494 32.6389 14.3163 33.1671 13.6588C33.7084 12.9878 33.974 12.0123 33.9638 10.7323C33.96 10.2524 33.8963 9.78619 33.7727 9.33382C33.6623 8.86802 33.4723 8.44952 33.2027 8.07832C32.9464 7.70702 32.6106 7.40968 32.1955 7.18631C31.7937 6.96283 31.2995 6.85343 30.7129 6.8581C29.6462 6.86659 28.8489 7.19961 28.3207 7.85716C27.7926 8.51472 27.5337 9.49015 27.544 10.7834Z"
              />
            </svg>
          </Link>
        </div>

        <div id="links">
          <NavLink to="/">tasks</NavLink>
          <NavLink to="/setting">settings</NavLink>
        </div>

        <div id="login-state">
          <Link to="/user" id="user">
            {userName ? userName : "guest"}
          </Link>

          <Link className="btn-state" to="/login">
            {userName ? "logout" : "log in"}
          </Link>
          <IoNotifications size={20} color={"gray"} />
        </div>
      </motion.nav>
      <NavRoutes />
    </div>
  );
};

export default Nav;
