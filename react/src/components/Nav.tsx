import { NavLink, Link } from "react-router-dom";
import React, { useEffect, useState } from "react";
import { IoNotifications } from "react-icons/io5";
import NavRoutes from "../widget/routes";
import { motion } from "framer-motion";
import Cookies from "js-cookie";
import axios from "axios";
import { getUserRoute, logOutRoute } from "../../routes";
import { useAppSelector } from "../customHooks/reduxTypes";

const Nav: React.FC = () => {
  const [userName, setUserName] = useState("");
  const { isAuth } = useAppSelector((state) => state.auth);
  console.log({ isAuth });
  const getUserData = async () => {
    const userId = Cookies.get("user-id");
    if (userId) {
      return await axios
        .get(getUserRoute(userId!))
        .then(({ data }) => setUserName(data.user.username));
    }
  };

  useEffect(() => {
    getUserData();
  }, [isAuth]);

  const handleLogOut = async () =>
    await axios.post(
      logOutRoute,
      { refToken: Cookies.get("refresh-token") },
      { withCredentials: true }
    );

  return (
    <div>
      <motion.nav
        initial={{ y: -50 }}
        animate={{ y: 0 }}
        transition={{ delay: 0.2, type: "spring", stiffness: 200 }}
      >
        <div id="logo">
          <Link to="/">
            <svg
              width="16"
              height="21"
              viewBox="0 0 16 21"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <motion.path
                initial={{ pathLength: 0, fillOpacity: "0" }}
                animate={{
                  pathLength: 1,
                  fillOpacity: 1,
                  transition: {
                    pathLength: { delay: 0.5, duration: 0.5, ease: "easeOut" },
                    fillOpacity: {
                      delay: 2,
                      ease: "easeInOut",
                    },
                  },
                }}
                fill="var(--created)"
                stroke={"var(--created)"}
                d="M0.49 21V-1.43051e-06H5.35V17.04H15.88V21H0.49Z"
              />
            </svg>

            <svg
              width="73"
              height="31"
              viewBox="0 0 73 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              style={{ position: "relative", top: "2.5px", marginLeft: 1 }}
            >
              <motion.path
                initial={{ pathLength: 0, fillOpacity: "0" }}
                animate={{
                  pathLength: 1,
                  fillOpacity: 1,
                  transition: {
                    pathLength: { delay: 1, duration: 1, ease: "easeInOut" },
                    fillOpacity: {
                      delay: 2.5,
                      ease: "easeInOut",
                    },
                  },
                }}
                fill="white"
                stroke={"white"}
                // d="M4.81152 6.62305V23H0.34375V6.62305H4.81152ZM2.58496 0.207031C3.24902 0.207031 3.82031 0.363281 4.29883 0.675781C4.77734 0.978516 5.0166 1.5498 5.0166 2.38965C5.0166 3.21973 4.77734 3.7959 4.29883 4.11816C3.82031 4.43066 3.24902 4.58691 2.58496 4.58691C1.91113 4.58691 1.33496 4.43066 0.856445 4.11816C0.387695 3.7959 0.15332 3.21973 0.15332 2.38965C0.15332 1.5498 0.387695 0.978516 0.856445 0.675781C1.33496 0.363281 1.91113 0.207031 2.58496 0.207031ZM20.9395 18.1367C20.9395 19.25 20.6758 20.1924 20.1484 20.9639C19.6309 21.7256 18.8545 22.3066 17.8193 22.707C16.7842 23.0977 15.4951 23.293 13.9521 23.293C12.8096 23.293 11.8281 23.2197 11.0078 23.0732C10.1973 22.9268 9.37695 22.6826 8.54688 22.3408V18.6494C9.43555 19.0498 10.3877 19.3818 11.4033 19.6455C12.4287 19.8994 13.3271 20.0264 14.0986 20.0264C14.9678 20.0264 15.5879 19.8994 15.959 19.6455C16.3398 19.3818 16.5303 19.04 16.5303 18.6201C16.5303 18.3467 16.4521 18.1025 16.2959 17.8877C16.1494 17.6631 15.8271 17.4141 15.3291 17.1406C14.8311 16.8574 14.0498 16.4912 12.9854 16.042C11.96 15.6123 11.1152 15.1777 10.4512 14.7383C9.79688 14.2988 9.30859 13.7812 8.98633 13.1855C8.67383 12.5801 8.51758 11.8135 8.51758 10.8857C8.51758 9.37207 9.10352 8.23438 10.2754 7.47266C11.457 6.70117 13.0342 6.31543 15.0068 6.31543C16.0225 6.31543 16.9893 6.41797 17.9072 6.62305C18.835 6.82812 19.7871 7.15527 20.7637 7.60449L19.416 10.8271C18.6055 10.4756 17.8389 10.1875 17.1162 9.96289C16.4033 9.73828 15.6758 9.62598 14.9336 9.62598C14.2793 9.62598 13.7861 9.71387 13.4541 9.88965C13.1221 10.0654 12.9561 10.334 12.9561 10.6953C12.9561 10.959 13.0391 11.1934 13.2051 11.3984C13.3809 11.6035 13.7129 11.833 14.2012 12.0869C14.6992 12.3311 15.4268 12.6484 16.3838 13.0391C17.3115 13.4199 18.1172 13.8203 18.8008 14.2402C19.4844 14.6504 20.0117 15.1631 20.3828 15.7783C20.7539 16.3838 20.9395 17.1699 20.9395 18.1367ZM31.3252 19.7334C31.8135 19.7334 32.2871 19.6846 32.7461 19.5869C33.2148 19.4893 33.6787 19.3672 34.1377 19.2207V22.5459C33.6592 22.7607 33.0635 22.9365 32.3506 23.0732C31.6475 23.2197 30.876 23.293 30.0361 23.293C29.0596 23.293 28.1807 23.1367 27.3994 22.8242C26.6279 22.502 26.0176 21.9502 25.5684 21.1689C25.1289 20.3779 24.9092 19.2793 24.9092 17.873V9.97754H22.7705V8.08789L25.2314 6.59375L26.5205 3.13672H29.377V6.62305H33.9619V9.97754H29.377V17.873C29.377 18.498 29.5527 18.9668 29.9043 19.2793C30.2656 19.582 30.7393 19.7334 31.3252 19.7334ZM41.9307 6.62305V23H37.4629V6.62305H41.9307ZM39.7041 0.207031C40.3682 0.207031 40.9395 0.363281 41.418 0.675781C41.8965 0.978516 42.1357 1.5498 42.1357 2.38965C42.1357 3.21973 41.8965 3.7959 41.418 4.11816C40.9395 4.43066 40.3682 4.58691 39.7041 4.58691C39.0303 4.58691 38.4541 4.43066 37.9756 4.11816C37.5068 3.7959 37.2725 3.21973 37.2725 2.38965C37.2725 1.5498 37.5068 0.978516 37.9756 0.675781C38.4541 0.363281 39.0303 0.207031 39.7041 0.207031ZM55.6855 9.97754H51.8184V23H47.3506V9.97754H44.8896V7.82422L47.3506 6.62305V5.42188C47.3506 4.02539 47.585 2.94141 48.0537 2.16992C48.5322 1.38867 49.2012 0.841797 50.0605 0.529297C50.9297 0.207031 51.9551 0.0458984 53.1367 0.0458984C54.0059 0.0458984 54.7969 0.119141 55.5098 0.265625C56.2227 0.402344 56.8037 0.558594 57.2529 0.734375L56.1104 4.01562C55.7686 3.9082 55.3975 3.81055 54.9971 3.72266C54.5967 3.63477 54.1377 3.59082 53.6201 3.59082C52.9951 3.59082 52.5361 3.78125 52.2432 4.16211C51.96 4.5332 51.8184 5.01172 51.8184 5.59766V6.62305H55.6855V9.97754ZM55.9199 6.62305H60.8125L63.9033 15.8369C64.001 16.1299 64.084 16.4277 64.1523 16.7305C64.2207 17.0332 64.2793 17.3457 64.3281 17.668C64.377 17.9902 64.416 18.3271 64.4453 18.6787H64.5332C64.5918 18.1514 64.6699 17.6582 64.7676 17.1992C64.875 16.7402 65.0068 16.2861 65.1631 15.8369L68.1953 6.62305H72.9854L66.0566 25.0947C65.6367 26.2275 65.0898 27.1699 64.416 27.9219C63.7422 28.6836 62.9658 29.2549 62.0869 29.6357C61.2178 30.0166 60.2607 30.207 59.2158 30.207C58.708 30.207 58.2686 30.1777 57.8975 30.1191C57.5264 30.0703 57.209 30.0166 56.9453 29.958V26.4131C57.1504 26.4619 57.4092 26.5059 57.7217 26.5449C58.0342 26.584 58.3613 26.6035 58.7031 26.6035C59.3281 26.6035 59.8652 26.4717 60.3145 26.208C60.7637 25.9443 61.1396 25.5879 61.4424 25.1387C61.7451 24.6992 61.9844 24.2158 62.1602 23.6885L62.4238 22.8828L55.9199 6.62305Z"
                d="M3.90332 6.78418V23H0.460938V6.78418H3.90332ZM2.2041 0.573242C2.73145 0.573242 3.18555 0.714844 3.56641 0.998047C3.95703 1.28125 4.15234 1.76953 4.15234 2.46289C4.15234 3.14648 3.95703 3.63477 3.56641 3.92773C3.18555 4.21094 2.73145 4.35254 2.2041 4.35254C1.65723 4.35254 1.19336 4.21094 0.8125 3.92773C0.441406 3.63477 0.255859 3.14648 0.255859 2.46289C0.255859 1.76953 0.441406 1.28125 0.8125 0.998047C1.19336 0.714844 1.65723 0.573242 2.2041 0.573242ZM19.7383 18.3711C19.7383 19.4355 19.4795 20.334 18.9619 21.0664C18.4443 21.7988 17.6875 22.3555 16.6914 22.7363C15.7051 23.1074 14.4941 23.293 13.0586 23.293C11.9258 23.293 10.9492 23.21 10.1289 23.0439C9.31836 22.8877 8.55176 22.6436 7.8291 22.3115V19.3379C8.60059 19.6992 9.46484 20.0117 10.4219 20.2754C11.3887 20.5391 12.3018 20.6709 13.1611 20.6709C14.2939 20.6709 15.1094 20.4951 15.6074 20.1436C16.1055 19.7822 16.3545 19.3037 16.3545 18.708C16.3545 18.3564 16.252 18.0439 16.0469 17.7705C15.8516 17.4873 15.4805 17.1992 14.9336 16.9062C14.3965 16.6035 13.6055 16.2422 12.5605 15.8223C11.5352 15.4121 10.6709 15.002 9.96777 14.5918C9.26465 14.1816 8.73242 13.6885 8.37109 13.1123C8.00977 12.5264 7.8291 11.7793 7.8291 10.8711C7.8291 9.43555 8.39551 8.34668 9.52832 7.60449C10.6709 6.85254 12.1797 6.47656 14.0547 6.47656C15.0508 6.47656 15.9883 6.5791 16.8672 6.78418C17.7559 6.97949 18.625 7.26758 19.4746 7.64844L18.3906 10.2412C17.6582 9.91895 16.9209 9.65527 16.1787 9.4502C15.4463 9.23535 14.6992 9.12793 13.9375 9.12793C13.0488 9.12793 12.3701 9.26465 11.9014 9.53809C11.4424 9.81152 11.2129 10.2021 11.2129 10.71C11.2129 11.0908 11.3252 11.4131 11.5498 11.6768C11.7744 11.9404 12.1602 12.2041 12.707 12.4678C13.2637 12.7314 14.0352 13.0586 15.0215 13.4492C15.9883 13.8203 16.8232 14.2109 17.5264 14.6211C18.2393 15.0215 18.7861 15.5146 19.167 16.1006C19.5479 16.6865 19.7383 17.4434 19.7383 18.3711ZM29.4941 20.5098C29.9434 20.5098 30.3877 20.4707 30.8271 20.3926C31.2666 20.3047 31.667 20.2021 32.0283 20.085V22.6924C31.6475 22.8584 31.1543 23 30.5488 23.1172C29.9434 23.2344 29.3135 23.293 28.6592 23.293C27.7412 23.293 26.916 23.1416 26.1836 22.8389C25.4512 22.5264 24.8701 21.9941 24.4404 21.2422C24.0107 20.4902 23.7959 19.4502 23.7959 18.1221V9.40625H21.584V7.86816L23.957 6.65234L25.085 3.18066H27.2529V6.78418H31.8965V9.40625H27.2529V18.0781C27.2529 18.8984 27.458 19.5088 27.8682 19.9092C28.2783 20.3096 28.8203 20.5098 29.4941 20.5098ZM38.7666 6.78418V23H35.3242V6.78418H38.7666ZM37.0674 0.573242C37.5947 0.573242 38.0488 0.714844 38.4297 0.998047C38.8203 1.28125 39.0156 1.76953 39.0156 2.46289C39.0156 3.14648 38.8203 3.63477 38.4297 3.92773C38.0488 4.21094 37.5947 4.35254 37.0674 4.35254C36.5205 4.35254 36.0566 4.21094 35.6758 3.92773C35.3047 3.63477 35.1191 3.14648 35.1191 2.46289C35.1191 1.76953 35.3047 1.28125 35.6758 0.998047C36.0566 0.714844 36.5205 0.573242 37.0674 0.573242ZM51.8037 9.40625H47.8633V23H44.4209V9.40625H41.7695V7.75098L44.4209 6.74023V5.6123C44.4209 4.23535 44.6357 3.1416 45.0654 2.33105C45.5049 1.52051 46.1299 0.939453 46.9404 0.587891C47.7607 0.226562 48.7373 0.0458984 49.8701 0.0458984C50.6123 0.0458984 51.291 0.109375 51.9062 0.236328C52.5215 0.353516 53.0391 0.490234 53.459 0.646484L52.5654 3.25391C52.2334 3.14648 51.8623 3.04883 51.4521 2.96094C51.042 2.86328 50.6025 2.81445 50.1338 2.81445C49.3525 2.81445 48.7764 3.05859 48.4053 3.54688C48.0439 4.03516 47.8633 4.74805 47.8633 5.68555V6.78418H51.8037V9.40625ZM52.126 6.78418H55.876L59.2012 16.042C59.3477 16.4619 59.4795 16.877 59.5967 17.2871C59.7236 17.6875 59.8311 18.083 59.9189 18.4736C60.0166 18.8643 60.0947 19.2549 60.1533 19.6455H60.2412C60.3389 19.1377 60.4756 18.5713 60.6514 17.9463C60.8369 17.3115 61.042 16.6768 61.2666 16.042L64.46 6.78418H68.166L61.208 25.2266C60.8076 26.2812 60.3145 27.1797 59.7285 27.9219C59.1523 28.6738 58.4688 29.2402 57.6777 29.6211C56.8867 30.0117 55.9834 30.207 54.9678 30.207C54.4795 30.207 54.0547 30.1777 53.6934 30.1191C53.332 30.0703 53.0244 30.0166 52.7705 29.958V27.2041C52.9756 27.2529 53.2344 27.2969 53.5469 27.3359C53.8594 27.375 54.1816 27.3945 54.5137 27.3945C55.1289 27.3945 55.6611 27.2725 56.1104 27.0283C56.5596 26.7842 56.9404 26.4375 57.2529 25.9883C57.5654 25.5488 57.8242 25.0459 58.0293 24.4795L58.6006 22.9561L52.126 6.78418Z"
              />
            </svg>
          </Link>
        </div>

        <div id="links">
          <NavLink to="/">tasks</NavLink>
          <NavLink to="/setting">settings</NavLink>
        </div>

        <div id="login-state">
          <Link to="/user" id="user">
            {userName ? userName : "guest"}
          </Link>
          <span>
            {userName ? (
              <Link
                className="btn-state"
                to="/login"
                onClick={() => {
                  handleLogOut();
                  setUserName("");
                }}
              >
                logout
              </Link>
            ) : (
              <Link className="btn-state" to="/login">
                log in
              </Link>
            )}
          </span>
          <IoNotifications size={20} color={"gray"} />
        </div>
      </motion.nav>
      <NavRoutes />
    </div>
  );
};

export default Nav;
